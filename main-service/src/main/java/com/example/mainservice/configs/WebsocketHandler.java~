package com.example.mainservice.configs;

import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;
import org.springframework.web.socket.handler.TextWebSocketHandler;

import java.io.IOException;
import java.util.concurrent.CopyOnWriteArraySet;

public class WebsocketHandler extends TextWebSocketHandler {
    private static final CopyOnWriteArraySet<WebSocketSession> sessions = new CopyOnWriteArraySet<>();

    @Override
    public void afterConnectionEstablished(WebSocketSession session) {
        sessions.add(session);
        System.out.println("‚úÖ WebSocket Client Connected: " + session.getId());
    }
    
    protected void handleTextMessage(WebSocketSession session, TextMessage message) {
        System.out.println("üì© Received message: " + message.getPayload());
    }

    @Override
    public void afterConnectionClosed(WebSocketSession session, org.springframework.web.socket.CloseStatus status) {
        sessions.remove(session);
        System.out.println("‚ùå WebSocket Client Disconnected: " + session.getId());
    }

    public static void broadcast(String data) {
        for (WebSocketSession session : sessions) {
            try {
                session.sendMessage(new TextMessage(data));
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}